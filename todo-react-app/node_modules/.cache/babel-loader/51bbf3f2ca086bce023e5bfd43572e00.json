{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-workspace\\\\todo-react-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Todo from './Todo';\nimport AddTodo from './AddTodo.js';\nimport { Paper, List, Container } from \"@material-ui/core\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.add = item => {\n      const thisItems = this.state.items;\n      item.id = \"ID-\" + thisItems.length; // key를 위한 id 추가\n\n      item.done = false; // done 초기화\n\n      thisItems.push(item); // 리스트에 아이템추가\n\n      this.setState({\n        items: thisItems\n      }); // 업데이트는 반드시 this.setState로 해야됨\n\n      console.log(\"items: \", this.state.items);\n    };\n\n    this.delete = item => {\n      const thisItems = this.state.items;\n      console.log(\"Before Update Items: \", this.state.items);\n      const newItems = this.Items.filter(e => e.id !== item.id);\n      this.setState({\n        items: newItems\n      }, () => {\n        // 디버깅 콜백\n        console.log(\"Update Items: \", this.state.items);\n      });\n    };\n\n    this.state = {\n      items: [{\n        id: \"0\",\n        title: \"Hello World 1\",\n        done: true\n      }, {\n        id: \"1\",\n        title: \"Hello World 2\",\n        done: false\n      }]\n    };\n  } // (1)함수 추가\n\n\n  render() {\n    var todoItems = this.state.items.length > 0 &&\n    /*#__PURE__*/\n    // JSX의 조건부 랜더링\n    _jsxDEV(Paper, {\n      style: {\n        margin: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: this.state.items.map((item, idx) => /*#__PURE__*/_jsxDEV(Todo, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this); // (2) 함수 연결\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n          add: this.add\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TodoList\",\n          children: todoItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/react-workspace/todo-react-app/src/App.js"],"names":["React","Todo","AddTodo","Paper","List","Container","App","Component","constructor","props","add","item","thisItems","state","items","id","length","done","push","setState","console","log","delete","newItems","Items","filter","e","title","render","todoItems","margin","map","idx"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Todo from './Todo';\nimport AddTodo from './AddTodo.js'\nimport { Paper, List, Container} from \"@material-ui/core\";\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      items : [\n        { id: \"0\", title: \"Hello World 1\", done: true},\n        { id: \"1\", title: \"Hello World 2\", done: false},\n      ],\n    };\n  }\n\n  // (1)함수 추가\n  add = (item) => {\n    const thisItems = this.state.items;\n    item.id = \"ID-\" + thisItems.length; // key를 위한 id 추가\n    item.done = false;  // done 초기화\n    thisItems.push(item)  // 리스트에 아이템추가\n    this.setState({ items: thisItems })   // 업데이트는 반드시 this.setState로 해야됨\n    console.log(\"items: \", this.state.items);\n  }\n  \n  // (1)함수 추가\n  delete =(item) => {\n    const thisItems = this.state.items;\n    console.log(\"Before Update Items: \", this.state.items);\n    const newItems = this.Items.filter( e => e.id !== item.id);\n    this.setState({ items: newItems }, () => {\n      // 디버깅 콜백\n      console.log(\"Update Items: \", this.state.items);\n    });\n  }\n\n  render(){\n    var todoItems = this.state.items.length > 0 && (    // JSX의 조건부 랜더링\n      <Paper style={{ margin: 16 }}>\n        <List>\n          {this.state.items.map((item, idx) => (\n            <Todo item={item} key={item.id}/>\n          ))}\n        </List>\n      </Paper>\n    );\n    \n    // (2) 함수 연결\n    return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n        <AddTodo add={this.add} />\n        <div className=\"TodoList\">{todoItems}</div>\n      </Container>\n    </div>);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}