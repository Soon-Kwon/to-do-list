{"ast":null,"code":"import { API_BASE_URL } from \"../app-config\";\nexport function call(api, method, request) {\n  let options = {\n    headers: new Headers({\n      \"Content-Type\": \"applicationn/json\"\n    }),\n    url: API_BASE_URL + api,\n    method: method,\n    body: \"\"\n  };\n\n  if (request) {\n    // GET method\n    options.body = JSON.stringify(request);\n  }\n\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      // response.ok가 true면 정상적인 응답을 받은 것이고 아니면 에러 응답을 받은 것임\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n}","map":{"version":3,"sources":["D:/react-workspace/todo-react-app/src/service/ApiService.js"],"names":["API_BASE_URL","call","api","method","request","options","headers","Headers","url","body","JSON","stringify","fetch","then","response","json","ok","Promise","reject"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AAEA,OAAO,SAASC,IAAT,CAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AACvC,MAAIC,OAAO,GAAG;AACVC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACjB,sBAAgB;AADC,KAAZ,CADC;AAIVC,IAAAA,GAAG,EAAER,YAAY,GAAGE,GAJV;AAKVC,IAAAA,MAAM,EAAEA,MALE;AAMVM,IAAAA,IAAI,EAAE;AANI,GAAd;;AAQA,MAAIL,OAAJ,EAAa;AACT;AACAC,IAAAA,OAAO,CAACI,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAAf;AACH;;AACD,SAAOQ,KAAK,CAACP,OAAO,CAACG,GAAT,EAAcH,OAAd,CAAL,CAA4BQ,IAA5B,CAAkCC,QAAD,IACpCA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBE,IAAD,IAAU;AAC3B,QAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GAND,CADG,CAAP;AASH","sourcesContent":["import { API_BASE_URL } from \"../app-config\";\r\n\r\nexport function call(api, method, request) {\r\n    let options = {\r\n        headers: new Headers({\r\n            \"Content-Type\": \"applicationn/json\",\r\n        }),\r\n        url: API_BASE_URL + api,\r\n        method: method,\r\n        body: \"\",\r\n    };\r\n    if (request) {\r\n        // GET method\r\n        options.body = JSON.stringify(request);\r\n    }\r\n    return fetch(options.url, options).then((response) =>\r\n        response.json().then((json) => {\r\n            if (!response.ok) {\r\n                // response.ok가 true면 정상적인 응답을 받은 것이고 아니면 에러 응답을 받은 것임\r\n                return Promise.reject(json);\r\n            }\r\n            return json;\r\n        })\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}